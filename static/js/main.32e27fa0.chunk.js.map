{"version":3,"sources":["components/employees/employees.js","components/search/search.js","components/directory/directory.js","App.js","reportWebVitals.js","index.js"],"names":["Employees","props","className","alt","firstName","src","icon","lastName","email","phone","Search","placeholder","name","type","onChange","event","startSort","Directory","state","employees","empSort","search","sorted","componentDidMount","fetch","then","res","json","setState","results","sortEmp","filter","first","toLowerCase","includes","last","target","value","render","label","map","employee","picture","medium","dob","date","id","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4OAsBeA,EAlBG,SAACC,GAIjB,OAEE,qBAAIC,UAAU,KAAd,UACE,6BAAI,qBAAKC,IAAKF,EAAMG,UAAWC,IAAKJ,EAAMK,SAC1C,+BAAKL,EAAMG,UAAX,IAAuBH,EAAMM,YAC7B,6BAAKN,EAAMO,QACX,+BAAKP,EAAMQ,MAAX,WCQSC,EAlBA,SAACT,GAEd,OACE,qBAAKC,UAAU,wCAAf,SACE,+BACE,uBACES,YAAY,gCACZC,KAAK,SACLC,KAAK,OACLX,UAAU,sCACVY,SAAU,SAACC,GAAD,OAAWd,EAAMe,UAAUD,WC4GhCE,E,4MAnHbC,MAAQ,CACNC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,QAAQ,G,EAKVC,kBAAoB,WAClBC,MAAM,oFACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CAAET,UAAWQ,EAAKE,c,EAMtCC,QAAU,WAAO,IAAD,EACc,EAAKZ,MAA3BC,EADQ,EACRA,UAAWE,EADH,EACGA,OACbD,EAAUD,EAAUY,QAAO,SAAAT,GAC7B,OACEA,EAAOV,KAAKoB,MAAMC,cAAcC,SAASb,EAAOY,gBAChDX,EAAOV,KAAKuB,KAAKF,cAAcC,SAASb,EAAOY,gBAC/CX,EAAOd,MAAMyB,cAAcC,SAASb,EAAOY,kBAG/C,EAAKL,SAAS,CAAER,a,EAIlBJ,UAAY,SAAAD,GACV,EAAKa,SAAS,CAAEP,OAAQN,EAAMqB,OAAOC,QAAS,WAC5C,EAAKP,UACL,EAAKF,SAAS,CAAEN,QAAQ,Q,EAI5BgB,OAAS,WAEP,OAEE,gCACE,sBAAKpC,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCAGA,4KAEA,oJAEA,cAAC,EAAD,CACEU,KAAK,SACLI,UAAW,EAAKA,UAChBuB,MAAM,cAIV,qBAAKrC,UAAU,YAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,uBAAOA,UAAU,QAAjB,SACE,+BACE,4CACA,sCACA,uCACA,uCACA,kDAGJ,kCAGI,EAAKgB,MAAMI,OAgBT,EAAKJ,MAAME,QAAQoB,KAAI,SAAAC,GAAQ,OAE/B,cAAC,EAAD,CAEErC,UAAWqC,EAAS7B,KAAKoB,MACzBzB,SAAUkC,EAAS7B,KAAKuB,KACxB1B,MAAOgC,EAAShC,MAChBD,MAAOiC,EAASjC,MAChBF,KAAMmC,EAASC,QAAQC,OACvBC,IAAKH,EAASG,IAAIC,MANbJ,EAASK,GAAGT,UAnBD,EAAKnB,MAAMC,UAAUqB,KAAI,SAAAC,GAAQ,OAGrD,cAAE,EAAF,CAEErC,UAAWqC,EAAS7B,KAAKoB,MACzBzB,SAAUkC,EAAS7B,KAAKuB,KACxB1B,MAAOgC,EAAShC,MAChBD,MAAOiC,EAASjC,MAChBF,KAAMmC,EAASC,QAAQC,OACvBC,IAAKH,EAASG,IAAIC,MANbJ,EAASK,GAAGT,UAPvB,gB,YAxEYU,aCYTC,G,MAZH,WAEV,OAEE,qBAAK9C,UAAU,MAAf,SACE,cAAC,EAAD,QCES+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.32e27fa0.chunk.js","sourcesContent":["import React from \"react\";\r\n//import \"./employees.css\";\r\n//import Moment from \"moment\";\r\n\r\nconst Employees = (props) => {\r\n\r\n  //let fixedDate = Moment(props.dob).format(\"LL\");\r\n\r\n  return (\r\n\r\n    <tr className=\"tr\">\r\n      <td><img alt={props.firstName} src={props.icon} /></td>\r\n      <td>{props.firstName} {props.lastName}</td>\r\n      <td>{props.email}</td>\r\n      <td>{props.phone} </td>\r\n      \r\n    </tr>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Employees;\r\n","\r\nimport React from \"react\";\r\n//import \"./search.css\";\r\n\r\nconst Search = (props) => {\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center mx-auto\">\r\n      <form>\r\n        <input\r\n          placeholder=\"Search for your coworker here\"\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control-lg search-font mx-auto\"\r\n          onChange={(event) => props.startSort(event)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport Employees from \"../employees/employees\";\r\nimport Search from \"../search/search\";\r\n//import \"./directory.css\";\r\n\r\nclass Directory extends Component {\r\n\r\n  state = {\r\n    employees: [],\r\n    empSort: [],\r\n    search: \"\",\r\n    sorted: false,\r\n  };\r\n\r\n  // check that the component rendered at least once, and pull in our data\r\n  // wait for the information to come back\r\n  componentDidMount = () => {\r\n    fetch(`https://randomuser.me/api/?results=25&nat=us&inc=name,email,phone,id,picture,dob`)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ employees: json.results })\r\n      })\r\n  };\r\n\r\n  // sort through employees based on search term\r\n  // check if there is a match and set that to empSort for rendering\r\n  sortEmp = () => {\r\n    let { employees, search } = this.state;\r\n    let empSort = employees.filter(sorted => {\r\n      return (\r\n        sorted.name.first.toLowerCase().includes(search.toLowerCase()) ||\r\n        sorted.name.last.toLowerCase().includes(search.toLowerCase()) ||\r\n        sorted.email.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    })\r\n    this.setState({ empSort })\r\n  }\r\n\r\n  // grab search term, activate sorted  \r\n  startSort = event => {\r\n    this.setState({ search: event.target.value }, () => {\r\n      this.sortEmp();\r\n      this.setState({ sorted: true });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div className=\"jumbotron\">\r\n          <h2 className=\"display-4\">\r\n            Employee Directory\r\n          </h2>\r\n          <p >\r\n            Hey team! At Barbara's request in the last all employee meeting, I've set up an easy way to quickly find information about our officemates.</p>\r\n          <p > Search below by name or email to pull up who you are looking for. Any questions or issues, feel free to reach out!\r\n          </p>\r\n          <Search\r\n            name=\"search\"\r\n            startSort={this.startSort}\r\n            label=\"Search\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <table className=\"table\">\r\n            <thead className=\"thead\">\r\n              <tr>\r\n                <th>Headshot  </th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Birthdate  </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {/* if it's not sorted, map accordingly */}\r\n              {!this.state.sorted ? this.state.employees.map(employee => (\r\n\r\n\r\n                < Employees\r\n                  key={employee.id.value}\r\n                  firstName={employee.name.first}\r\n                  lastName={employee.name.last}\r\n                  phone={employee.phone}\r\n                  email={employee.email}\r\n                  icon={employee.picture.medium}\r\n                  dob={employee.dob.date}\r\n\r\n                />\r\n\r\n              ))\r\n                // otherwise map the sorted employees\r\n                : this.state.empSort.map(employee => (\r\n\r\n                  <Employees\r\n                    key={employee.id.value}\r\n                    firstName={employee.name.first}\r\n                    lastName={employee.name.last}\r\n                    phone={employee.phone}\r\n                    email={employee.email}\r\n                    icon={employee.picture.medium}\r\n                    dob={employee.dob.date}\r\n                  />\r\n\r\n                ))};\r\n          </tbody>\r\n          </table>\r\n\r\n        </div>\r\n\r\n      </div >\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Directory;","  \nimport React from \"react\";\nimport Directory from \"./components/directory/directory\";\nimport './App.css';\n\nconst App = () => {\n\n  return (\n\n    <div className=\"App\">\n      <Directory />\n    </div>\n\n  )\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}